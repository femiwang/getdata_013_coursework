evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("what up homie")
submit()
submit()
submit()
mad_libs("Tianjin", "beautiful", "car")
submit()
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <-flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- unique(flags)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique(flags), length)
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plant)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LET)
sample(LETTERS)
sample(c(0,1), 100, prob = c(0.3, 0.7))
sample(c(0,1), 100, prob = c(0.3, 0.7), replace = TR)
sample(c(0,1), 100, prob = c(0.3, 0.7), replace = TRUE)
flips <- sample(c(0,1), 100, prob = c(0.3, 0.7), replace = TRUE)
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(5, 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1960-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17,1986 08:24"
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
?strptime
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
hist(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = Speed, y = cars$dist)
plot(x = "Speed", y = cars$dist)
plot(y = cars$speed, x = "Speed")
plot(x = cars$speed, y = cars$dist, "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2
)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
data.read()
cwd
cwd()
wd
wd()
dir()
read.csv(/Downloads/hw1_data.csv)
read.csv("/Downloads/hw1_data.csv")
read.csv("./Downloads/hw1_data.csv")
x <- read.csv("./Downloads/hw1_data.csv")
table(x)
d
0
exit()
;
`
?matric
ex
?matrix
clear
add2 <- function(x,y){
x+y
}
add2(3,5)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 2)
above(x)
above(x,)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
col_mean <- function(x){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(x[i])
}
means
}
col_mean(airquality)
airquality
col_mean(airquality)
col_mean <- function(x){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(x[, i])
}
means
}
col_mean(airquality)
col_mean <- function(x, removeNA = T){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(x[, i])
}
means
}
col_mean(airquality)
col_mean <- function(x, removeNA = TRUE){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(x[, i])
}
means
}
col_mean(airquality)
col_mean <- function(x, removeNA = TRUE){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(x[, i])
}
means
}
col_mean(airquality)
col_mean(airquality, TRUE)
col_mean <- function(x){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc){
h <- x[, i]
means[i] <- mean(h[!is.na(h)])
}
means
}
col_mean(airquality, TRUE)
col_mean(airquality)
source("complete.R")
setwd("~/Desktop/dss")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
comp <- complete(directory)
comp <- complete("specdata")
head(comp)
y <- head(comp)
y
y[,y[,2]>0]
y[y[,2]>0,]
y[y[,2]>200,]
full_file <- read.csv(
+ "specdata/001.csv")
full_file <- read.csv("specdata/001.csv")
full_file2 <- read.csv("specdata/002.csv")
head(full_file)
cor(full_file[,2], full_file[,3])
full_file
full_file[!is.na[full_file[,2]],2]
full_file[!is.na(full_file[,2]),2]
full_file[,!is.na(full_file[,2])]
full_file[!is.na(full_file[,2]),]
full_file[!is.na(full_file[,2]),2]
corr <- function(directory, threshold = 0) {
#get all items in complete directory
comp <- complete(directory)
#get id for items that meet the threshold
meet_thresh_bool <- comp[,2] > threshold
meet_thresh_id <- comp[meet_thresh_bool,][1]
meet_thresh_no <- dim(meet_thresh_id)[1]
#if no items meet the threshold return 0!
if(meet_thresh_no == 0){
final_result = c("0")
}
#get all files id that meet the threshold
file_names <- character(meet_thresh_no)
curr_index <- 1
for(i in meet_thresh_id[1:meet_thresh_no,1]){
file_names[curr_index] <- paste(directory,"/", dir(directory)[i], sep = "")
curr_index <- curr_index + 1
}
#get sulfite and Nitrate details for items meeting the threshold
cor_values <- numeric(meet_thresh_no)
for(i in 1:meet_thresh_no){
curr_file <- read.csv(file_names[i]);
cor_values[i] <- cor(curr_file[!is.na(curr_file[, 2]), 2], curr_file[!is.na(curr_file[, 3]), 3])
}
#return result
final_result <- c(cor_values[1:meet_thresh_no])
}
cr <- corr("specdata", 150)
full_file[!is.na(full_file[,2]),2]
full_file[!is.na(full_file[,3]),3]
length(full_file[!is.na(full_file[,3]),3])
length(full_file[!is.na(full_file[,2]),2])
length(full_file[!(is.na(full_file[,2]) && is.na(full_file[,2])),2])
length(full_file[!(is.na(full_file[,2]) && is.na(full_file[,3])),2])
length(full_file[!(!is.na(full_file[,2]) && !is.na(full_file[,3])),2])
length(full_file[(!is.na(full_file[,2]) && !is.na(full_file[,3])),2])
length(full_file[!is.na(full_file[,2]),2])
length(full_file[!is.na(full_file[,2]) && !is.na(full_file[,3]),2])
length(full_file[!is.na(full_file[1:1000,2]) && !is.na(full_file[1:1000,3]),2])
length(full_file[(!is.na(full_file[1:1000,2]) && !is.na(full_file[1:1000,3])),2])
is.na(full_file[1:1000,2]) && !is.na(full_file[1:1000,3])
is.na(full_file[1:1000,2])
is.na(full_file[,2])[1:1000] && !is.na(full_file[,3])[1:1000]
c(is.na(full_file[,2]) && !is.na(full_file[,3]))
c(is.na(full_file[,2]) & !is.na(full_file[,3]))
full_file[!(is.na(full_file[,2]) & is.na(full_file[,2])),2]
full_file[!(is.na(full_file[,2]) & is.na(full_file[,3])),3]
full_file[!(is.na(full_file[,2]) & is.na(full_file[,3])),2]
full_file[!(is.na(full_file[,3]) & is.na(full_file[,2])),2]
full_file[(!is.na(full_file[,3]) & !is.na(full_file[,2])),2]
full_file[(!is.na(full_file[,3]) & !is.na(full_file[,2])),3]
full_file[(!is.na(full_file[,3]) & !is.na(full_file[,2])),3]
full_file[(!is.na(full_file[,3]) & !is.na(full_file[,2])),2]
full_file[(!is.na(full_file[,2]) & !is.na(full_file[,3])),2]
full_file[(!is.na(full_file[,3]) & !is.na(full_file[,2])),3]
full_file[(!is.na(full_file[,2]) & !is.na(full_file[,3])),3]
is.na(full_file[,2])
ful_file[is.na(full_file[,2]),2]
full_file[is.na(full_file[,2]),2]
full_file[!is.na(full_file[,2]),2]
full_file[!is.na(full_file[,2]),2]
full_file[!(is.na(full_file[,2]) & is.na(full_file[,2])) ,2]
full_file[!(is.na(full_file[,2]) & is.na(full_file[,3])) ,2]
full_file[!(is.na(full_file[,2]) & is.na(full_file[,3])) ,3]
full_file[!(is.na(full_file[,2]) & is.na(full_file[,3])) ,3]
(is.na(full_file[,2]) & is.na(full_file[,3])
d
is.na(full_file[,2]) & is.na(full_file[,3]
)
sum(is.na(full_file[,2]) & is.na(full_file[,3]))
sum(!(is.na(full_file[,2]) & is.na(full_file[,3])))
sum(!(is.na(full_file[,2]) & is.na(full_file[,2])))
sum(!(is.na(full_file[,3]) & is.na(full_file[,2])))
good_val <- !(is.na(full_file[,3]) & is.na(full_file[,2]))
full_file[good_val, 2]
full_file[good_val, 3]
length(full_file[good_val, 3])
length(full_file[good_val, 2])
corr <- function(directory, threshold = 0) {
#get all items in complete directory
comp <- complete(directory)
#get id for items that meet the threshold
meet_thresh_bool <- comp[,2] > threshold
meet_thresh_id <- comp[meet_thresh_bool,][1]
meet_thresh_no <- dim(meet_thresh_id)[1]
#if no items meet the threshold return 0!
if(meet_thresh_no == 0){
final_result = c("0")
}
#get all files id that meet the threshold
file_names <- character(meet_thresh_no)
curr_index <- 1
for(i in meet_thresh_id[1:meet_thresh_no,1]){
file_names[curr_index] <- paste(directory,"/", dir(directory)[i], sep = "")
curr_index <- curr_index + 1
}
#get sulfite and Nitrate details for items meeting the threshold
cor_values <- numeric(meet_thresh_no)
for(i in 1:meet_thresh_no){
curr_file <- read.csv(file_names[i]);
good_value <- !(is.na(curr_file[,3]) & is.na(curr_file[,2]))
cor_values[i] <- cor(curr_file[good_value, 2], curr_file[good_value, 3])
}
#return result
final_result <- c(cor_values[1:meet_thresh_no])
}
cr <- corr("specdata", 150)
head(cr)
full_file[good_val, 3]
full_file[good_val, 2]
good_val <- (!is.na(full_file[,3]) & !is.na(full_file[,2]))
full_file[good_val, 2]
full_file[good_val, 3]
length(full_file[good_val, 3])
length(full_file[good_val, 2])
corr <- function(directory, threshold = 0) {
#get all items in complete directory
comp <- complete(directory)
#get id for items that meet the threshold
meet_thresh_bool <- comp[,2] > threshold
meet_thresh_id <- comp[meet_thresh_bool,][1]
meet_thresh_no <- dim(meet_thresh_id)[1]
#if no items meet the threshold return 0!
if(meet_thresh_no == 0){
final_result = c("0")
}
#get all files id that meet the threshold
file_names <- character(meet_thresh_no)
curr_index <- 1
for(i in meet_thresh_id[1:meet_thresh_no,1]){
file_names[curr_index] <- paste(directory,"/", dir(directory)[i], sep = "")
curr_index <- curr_index + 1
}
#get sulfite and Nitrate details for items meeting the threshold
cor_values <- numeric(meet_thresh_no)
for(i in 1:meet_thresh_no){
curr_file <- read.csv(file_names[i]);
good_value <- (!is.na(curr_file[,3]) & !is.na(curr_file[,2]))
cor_values[i] <- cor(curr_file[good_value, 2], curr_file[good_value, 3])
}
#return result
final_result <- c(cor_values[1:meet_thresh_no])
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
corr <- function(directory, threshold = 0) {
#get all items in complete directory
comp <- complete(directory)
#get id for items that meet the threshold
meet_thresh_bool <- comp[,2] > threshold
meet_thresh_id <- comp[meet_thresh_bool,][1]
meet_thresh_no <- dim(meet_thresh_id)[1]
#if no items meet the threshold return 0!
if(meet_thresh_no == 0){
return c("0")
}
#get all files id that meet the threshold
file_names <- character(meet_thresh_no)
curr_index <- 1
for(i in meet_thresh_id[1:meet_thresh_no,1]){
file_names[curr_index] <- paste(directory,"/", dir(directory)[i], sep = "")
curr_index <- curr_index + 1
}
#get sulfite and Nitrate details for items meeting the threshold
cor_values <- numeric(meet_thresh_no)
for(i in 1:meet_thresh_no){
curr_file <- read.csv(file_names[i]);
good_value <- (!is.na(curr_file[,3]) & !is.na(curr_file[,2]))
cor_values[i] <- cor(curr_file[good_value, 2], curr_file[good_value, 3])
}
#return result
final_result <- c(cor_values[1:meet_thresh_no])
}
corr <- function(directory, threshold = 0) {
#get all items in complete directory
comp <- complete(directory)
#get id for items that meet the threshold
meet_thresh_bool <- comp[,2] > threshold
meet_thresh_id <- comp[meet_thresh_bool,][1]
meet_thresh_no <- dim(meet_thresh_id)[1]
#if no items meet the threshold return 0!
if(meet_thresh_no == 0){
return c("0");
}
#get all files id that meet the threshold
file_names <- character(meet_thresh_no)
curr_index <- 1
for(i in meet_thresh_id[1:meet_thresh_no,1]){
file_names[curr_index] <- paste(directory,"/", dir(directory)[i], sep = "")
curr_index <- curr_index + 1
}
#get sulfite and Nitrate details for items meeting the threshold
cor_values <- numeric(meet_thresh_no)
for(i in 1:meet_thresh_no){
curr_file <- read.csv(file_names[i]);
good_value <- (!is.na(curr_file[,3]) & !is.na(curr_file[,2]))
cor_values[i] <- cor(curr_file[good_value, 2], curr_file[good_value, 3])
}
#return result
final_result <- c(cor_values[1:meet_thresh_no])
}
?return
corr <- function(directory, threshold = 0) {
#get all items in complete directory
comp <- complete(directory)
#get id for items that meet the threshold
meet_thresh_bool <- comp[,2] > threshold
meet_thresh_id <- comp[meet_thresh_bool,][1]
meet_thresh_no <- dim(meet_thresh_id)[1]
#if no items meet the threshold return 0!
if(meet_thresh_no == 0){
return(c("0"))
}
#get all files id that meet the threshold
file_names <- character(meet_thresh_no)
curr_index <- 1
for(i in meet_thresh_id[1:meet_thresh_no,1]){
file_names[curr_index] <- paste(directory,"/", dir(directory)[i], sep = "")
curr_index <- curr_index + 1
}
#get sulfite and Nitrate details for items meeting the threshold
cor_values <- numeric(meet_thresh_no)
for(i in 1:meet_thresh_no){
curr_file <- read.csv(file_names[i]);
good_value <- (!is.na(curr_file[,3]) & !is.na(curr_file[,2]))
cor_values[i] <- cor(curr_file[good_value, 2], curr_file[good_value, 3])
}
#return result
final_result <- c(cor_values[1:meet_thresh_no])
}
submit()
?cor
submit()
