grep("mean[(][)]|std[(][)]", colnames(x_train))
x <- grep("mean[(][)]|std[(][)]", colnames(x_train))
View(x_train[,x])
View(x_train[,x])
x_train <- x_train[, x]
##script to complete course work on Getting and Cleaning data
##1: merge the training and test sets(Consider using chaining when cleaning up code)
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_test <- tbl_df(read.table("./test/y_test.txt"))
x_test <- tbl_df(read.table("./test/X_test.txt"))
subj_test <- tbl_df(read.table("./test/subject_test.txt"))
##get features names
features <- read.table("./features.txt")
##name all the features
colnames(x_test) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean[(][)]|std[(][)]", colnames(x_test))
x_test <- x_test[,x_grep]
##bind above read data into a single data set
data_test <- bind_cols(subj_test, y_test, x_test)
##rename the first 2 columns(subj_test, y_test)
colnames(data_test)[1:2] <- c("subject", "labels")
##copy above method for training folder, use function?
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_train <- tbl_df(read.table("./train/y_train.txt"))
x_train <- tbl_df(read.table("./train/X_train.txt"))
subj_train <- tbl_df(read.table("./train/subject_train.txt"))
##get features names
##features <- read.table("./features.txt")
##name all the features
colnames(x_train) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean[(][)]|std[(][)]", colnames(x_train))
x_train <- x_train[, x_grep]
##bind above read data into a single data set
data_train <- bind_cols(subj_train, y_train, x_train)
##rename the first 2 columns(subj_test, y_test)
colnames(data_train)[1:2] <- c("subject", "labels")
##combine test and train data sets
combined_data <- bind_rows(data_test, data_train)
View(combined_data)
combined_data[combined_data[,2] == 1,2] <- "WALKING"
combined_data[combined_data[,2] == 2,2] <- "WALKING_UPSTAIRS"
combined_data[combined_data[,2] == 3,2] <- "WALKING_DOWNSTAIRS"
combined_data[combined_data[,2] == 4,2] <- "SITTING"
combined_data[combined_data[,2] == 5,2] <- "STANDING"
combined_data[combined_data[,2] == 6,2] <- "LAYING"
View(combined_data)
mean(combined_data[,3])
combined_data[1,3]
mean(combined_data[,4])
combined_data[1,4]
combined_data[,4]
sum(combined_data[,4])
mean(combined_data[,4])
avg(combined_data[,4])
?mean
?average
?avrg
mean(as.integer(combined_data[,4]))
mean(as.numeral(combined_data[,4]))
mean(as.numeric(combined_data[,4]))
sum(combined_data[,4])
combined_data[,4]
combined_data[1,4]
sum(combined_data[,4])
gather(combined_data, subject, labels, -(tBodyAcc-mean()-X:fBodyBodyGyroJerkMag-std()))
gather(combined_data, subject, labels, -("tBodyAcc-mean()-X":fBodyBodyGyroJerkMag-std()))
gather(combined_data, subject, labels, -("tBodyAcc-mean()-X":"fBodyBodyGyroJerkMag-std()"))
combined_data
y <- features[1,2]
y
?str
gsub("-","",y)
gsub("-","",features[,2])
##script to complete course work on Getting and Cleaning data
##1: merge the training and test sets(Consider using chaining when cleaning up code)
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_test <- tbl_df(read.table("./test/y_test.txt"))
x_test <- tbl_df(read.table("./test/X_test.txt"))
subj_test <- tbl_df(read.table("./test/subject_test.txt"))
##get features names
features <- read.table("./features.txt")
##remove minus signs
features <- gsub("-","",features[,2])
##name all the features
colnames(x_test) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean[(][)]|std[(][)]", colnames(x_test))
x_test <- x_test[,x_grep]
##bind above read data into a single data set
data_test <- bind_cols(subj_test, y_test, x_test)
##rename the first 2 columns(subj_test, y_test)
colnames(data_test)[1:2] <- c("subject", "labels")
##copy above method for training folder, use function?
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_train <- tbl_df(read.table("./train/y_train.txt"))
x_train <- tbl_df(read.table("./train/X_train.txt"))
subj_train <- tbl_df(read.table("./train/subject_train.txt"))
##get features names
##features <- read.table("./features.txt")
##name all the features
colnames(x_train) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean[(][)]|std[(][)]", colnames(x_train))
x_train <- x_train[, x_grep]
##bind above read data into a single data set
data_train <- bind_cols(subj_train, y_train, x_train)
##rename the first 2 columns(subj_test, y_test)
colnames(data_train)[1:2] <- c("subject", "labels")
##combine test and train data sets
combined_data <- bind_rows(data_test, data_train)
##2: extract only the measurements on the mean and std
##for each measurement
##3: use descriptive activity names to name the activites in the data set
##names for activities 1:6 are:
##c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING")
combined_data[combined_data[,2] == 1,2] <- "WALKING"
combined_data[combined_data[,2] == 2,2] <- "WALKING_UPSTAIRS"
combined_data[combined_data[,2] == 3,2] <- "WALKING_DOWNSTAIRS"
combined_data[combined_data[,2] == 4,2] <- "SITTING"
combined_data[combined_data[,2] == 5,2] <- "STANDING"
combined_data[combined_data[,2] == 6,2] <- "LAYING"
View(combined_data)
##script to complete course work on Getting and Cleaning data
##1: merge the training and test sets(Consider using chaining when cleaning up code)
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_test <- tbl_df(read.table("./test/y_test.txt"))
x_test <- tbl_df(read.table("./test/X_test.txt"))
subj_test <- tbl_df(read.table("./test/subject_test.txt"))
##get features names
features <- read.table("./features.txt")
##remove minus signs
features[,2] <- gsub("-","",features[,2])
##name all the features
colnames(x_test) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean[(][)]|std[(][)]", colnames(x_test))
x_test <- x_test[,x_grep]
##bind above read data into a single data set
data_test <- bind_cols(subj_test, y_test, x_test)
##rename the first 2 columns(subj_test, y_test)
colnames(data_test)[1:2] <- c("subject", "labels")
##copy above method for training folder, use function?
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_train <- tbl_df(read.table("./train/y_train.txt"))
x_train <- tbl_df(read.table("./train/X_train.txt"))
subj_train <- tbl_df(read.table("./train/subject_train.txt"))
##get features names
##features <- read.table("./features.txt")
##name all the features
colnames(x_train) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean[(][)]|std[(][)]", colnames(x_train))
x_train <- x_train[, x_grep]
##bind above read data into a single data set
data_train <- bind_cols(subj_train, y_train, x_train)
##rename the first 2 columns(subj_test, y_test)
colnames(data_train)[1:2] <- c("subject", "labels")
##combine test and train data sets
combined_data <- bind_rows(data_test, data_train)
##2: extract only the measurements on the mean and std
##for each measurement
##3: use descriptive activity names to name the activites in the data set
##names for activities 1:6 are:
##c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING")
combined_data[combined_data[,2] == 1,2] <- "WALKING"
combined_data[combined_data[,2] == 2,2] <- "WALKING_UPSTAIRS"
combined_data[combined_data[,2] == 3,2] <- "WALKING_DOWNSTAIRS"
combined_data[combined_data[,2] == 4,2] <- "SITTING"
combined_data[combined_data[,2] == 5,2] <- "STANDING"
combined_data[combined_data[,2] == 6,2] <- "LAYING"
##4: Appropriately labels the data set with descriptive variable names
##5: From step 4 creates a second, independent tidy data set with the
##average of each variable for each activity and each subject.
View(combined_data)
gather(combined_data, subject, labels, -(tBodyAccmean()X:fBodyBodyGyroJerkMagstd()))
gsub("[-,()]","",features[,2])
gsub("[-,()]","_",features[,2])
##script to complete course work on Getting and Cleaning data
##1: merge the training and test sets(Consider using chaining when cleaning up code)
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_test <- tbl_df(read.table("./test/y_test.txt"))
x_test <- tbl_df(read.table("./test/X_test.txt"))
subj_test <- tbl_df(read.table("./test/subject_test.txt"))
##get features names
features <- read.table("./features.txt")
##remove minus signs
features[,2] <- gsub("[-,()]","",features[,2])
##name all the features
colnames(x_test) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean[(][)]|std[(][)]", colnames(x_test))
x_test <- x_test[,x_grep]
##bind above read data into a single data set
data_test <- bind_cols(subj_test, y_test, x_test)
##rename the first 2 columns(subj_test, y_test)
colnames(data_test)[1:2] <- c("subject", "labels")
##copy above method for training folder, use function?
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_train <- tbl_df(read.table("./train/y_train.txt"))
x_train <- tbl_df(read.table("./train/X_train.txt"))
subj_train <- tbl_df(read.table("./train/subject_train.txt"))
##get features names
##features <- read.table("./features.txt")
##name all the features
colnames(x_train) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean[(][)]|std[(][)]", colnames(x_train))
x_train <- x_train[, x_grep]
##bind above read data into a single data set
data_train <- bind_cols(subj_train, y_train, x_train)
##rename the first 2 columns(subj_test, y_test)
colnames(data_train)[1:2] <- c("subject", "labels")
##combine test and train data sets
combined_data <- bind_rows(data_test, data_train)
##2: extract only the measurements on the mean and std
##for each measurement
##3: use descriptive activity names to name the activites in the data set
##names for activities 1:6 are:
##c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING")
combined_data[combined_data[,2] == 1,2] <- "WALKING"
combined_data[combined_data[,2] == 2,2] <- "WALKING_UPSTAIRS"
combined_data[combined_data[,2] == 3,2] <- "WALKING_DOWNSTAIRS"
combined_data[combined_data[,2] == 4,2] <- "SITTING"
combined_data[combined_data[,2] == 5,2] <- "STANDING"
combined_data[combined_data[,2] == 6,2] <- "LAYING"
##4: Appropriately labels the data set with descriptive variable names
##5: From step 4 creates a second, independent tidy data set with the
##average of each variable for each activity and each subject.
View(combined_data)
View(features)
##script to complete course work on Getting and Cleaning data
##1: merge the training and test sets(Consider using chaining when cleaning up code)
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_test <- tbl_df(read.table("./test/y_test.txt"))
x_test <- tbl_df(read.table("./test/X_test.txt"))
subj_test <- tbl_df(read.table("./test/subject_test.txt"))
##get features names
features <- read.table("./features.txt")
##remove minus signs
features[,2] <- gsub("[-,()]","",features[,2])
##name all the features
colnames(x_test) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean[(][)]|std[(][)]", colnames(x_test))
x_test <- x_test[,x_grep]
##bind above read data into a single data set
data_test <- bind_cols(subj_test, y_test, x_test)
##rename the first 2 columns(subj_test, y_test)
colnames(data_test)[1:2] <- c("subject", "labels")
##copy above method for training folder, use function?
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_train <- tbl_df(read.table("./train/y_train.txt"))
x_train <- tbl_df(read.table("./train/X_train.txt"))
subj_train <- tbl_df(read.table("./train/subject_train.txt"))
##get features names
##features <- read.table("./features.txt")
##name all the features
colnames(x_train) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean[(][)]|std[(][)]", colnames(x_train))
x_train <- x_train[, x_grep]
##bind above read data into a single data set
data_train <- bind_cols(subj_train, y_train, x_train)
##rename the first 2 columns(subj_test, y_test)
colnames(data_train)[1:2] <- c("subject", "labels")
##combine test and train data sets
combined_data <- bind_rows(data_test, data_train)
##2: extract only the measurements on the mean and std
##for each measurement
##3: use descriptive activity names to name the activites in the data set
##names for activities 1:6 are:
##c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING")
combined_data[combined_data[,2] == 1,2] <- "WALKING"
combined_data[combined_data[,2] == 2,2] <- "WALKING_UPSTAIRS"
combined_data[combined_data[,2] == 3,2] <- "WALKING_DOWNSTAIRS"
combined_data[combined_data[,2] == 4,2] <- "SITTING"
combined_data[combined_data[,2] == 5,2] <- "STANDING"
combined_data[combined_data[,2] == 6,2] <- "LAYING"
##4: Appropriately labels the data set with descriptive variable names
##5: From step 4 creates a second, independent tidy data set with the
##average of each variable for each activity and each subject.
View(combined_data)
View(features)
##script to complete course work on Getting and Cleaning data
##1: merge the training and test sets(Consider using chaining when cleaning up code)
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_test <- tbl_df(read.table("./test/y_test.txt"))
x_test <- tbl_df(read.table("./test/X_test.txt"))
subj_test <- tbl_df(read.table("./test/subject_test.txt"))
##get features names
features <- read.table("./features.txt")
##remove minus signs
features[,2] <- gsub("[-,()]","",features[,2])
##name all the features
colnames(x_test) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean|std", colnames(x_test))
x_test <- x_test[,x_grep]
##bind above read data into a single data set
data_test <- bind_cols(subj_test, y_test, x_test)
##rename the first 2 columns(subj_test, y_test)
colnames(data_test)[1:2] <- c("subject", "labels")
##copy above method for training folder, use function?
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_train <- tbl_df(read.table("./train/y_train.txt"))
x_train <- tbl_df(read.table("./train/X_train.txt"))
subj_train <- tbl_df(read.table("./train/subject_train.txt"))
##get features names
##features <- read.table("./features.txt")
##name all the features
colnames(x_train) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean|std", colnames(x_train))
x_train <- x_train[, x_grep]
##bind above read data into a single data set
data_train <- bind_cols(subj_train, y_train, x_train)
##rename the first 2 columns(subj_test, y_test)
colnames(data_train)[1:2] <- c("subject", "labels")
##combine test and train data sets
combined_data <- bind_rows(data_test, data_train)
##2: extract only the measurements on the mean and std
##for each measurement
##3: use descriptive activity names to name the activites in the data set
##names for activities 1:6 are:
##c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING")
combined_data[combined_data[,2] == 1,2] <- "WALKING"
combined_data[combined_data[,2] == 2,2] <- "WALKING_UPSTAIRS"
combined_data[combined_data[,2] == 3,2] <- "WALKING_DOWNSTAIRS"
combined_data[combined_data[,2] == 4,2] <- "SITTING"
combined_data[combined_data[,2] == 5,2] <- "STANDING"
combined_data[combined_data[,2] == 6,2] <- "LAYING"
##4: Appropriately labels the data set with descriptive variable names
##5: From step 4 creates a second, independent tidy data set with the
##average of each variable for each activity and each subject.
View(combined_data)
gather(combined_data, subject, labels, -(tBodyAccmeanX:fBodyBodyGyroJerkMagstd)
)
gather(combined_data, subject, labels)
gather(combined_data, variable, value)
gather(combined_data, subject, labels)
x <- gather(combined_data, subject, labels)
x
View(x)
x <- gather(combined_data, subject)
View(x)
?gather
?group_by
group_by(combined_data, subject, labels)
summarise(combined_data, mean(0))
summarise(combined_data, mean())
summarise(combined_data, mean(combined_data))
summarise(combined_data, mean())
?summarise
summarise(combined_data, mean(tBodyAccmeanX))
summarise(combined_data, mean(tBodyAccmeanY))
?grouped_df
?group_by
by_cyl <- group_by(mtcars, cyl)
by_cyl <- group_by(mtcars, cyl)
summarise(by_cyl, mean(disp), mean(hp))
View(mtcars)
gc <- group_by(combined_data, subject, labels)
summarise(combined_data, mean(tBodyAccmeanX:fBodyBodyGyroJerkMagmeanFreq))
summarise(gc, mean(tBodyAccmeanX:fBodyBodyGyroJerkMagmeanFreq))
View(summarise(gc, mean(tBodyAccmeanX:fBodyBodyGyroJerkMagmeanFreq)))
summarise(gc, mean())
summarise(gc, mean(gc[,3:81]))
summarise(gc, mean(fBodyBodyGyroJerkMagmeanFreq))
summarise(by_cyl, mean(disp), mean(hp))
?sapply
sapply(gc[,3:81], mean)
summarise(gc, sapply(gc[,3:81], mean))
summarise(gc, mean(gc))
summarise(gc, mean(gc[,3]))
summarise(gc, mean(tBodyAccmeanX))
summarise(gc, mean(select(gc,tBodyAccmeanX:fBodyBodyGyroJerkMagmeanFreq))
)
gather(combined_data, tBodyAccmeanX:fBodyBodyGyroJerkMagmeanFreq)
?gather
gather(combined_data, variables, result, tBodyAccmeanX:fBodyBodyGyroJerkMagmeanFreq)
gac <- gather(combined_data, variables, result, tBodyAccmeanX:fBodyBodyGyroJerkMagmeanFreq)
gg <- group_by(combined_data, subject, labels, variables)
gg <- group_by(gac), subject, labels, variables)
gg <- group_by(gac, subject, labels, variables)
summarise(gg, mean(result))
summarise(gg, average = mean(result))
##script to complete course work on Getting and Cleaning data
##1: merge the training and test sets(Consider using chaining when cleaning up code)
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_test <- tbl_df(read.table("./test/y_test.txt"))
x_test <- tbl_df(read.table("./test/X_test.txt"))
subj_test <- tbl_df(read.table("./test/subject_test.txt"))
##get features names
features <- read.table("./features.txt")
##remove minus signs
features[,2] <- gsub("[-,()]","",features[,2])
##name all the features
colnames(x_test) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean|std", colnames(x_test))
x_test <- x_test[,x_grep]
##bind above read data into a single data set
data_test <- bind_cols(subj_test, y_test, x_test)
##rename the first 2 columns(subj_test, y_test)
colnames(data_test)[1:2] <- c("subject", "activity")
##copy above method for training folder, use function?
##read all the data for test
##while reading table, also set colnames using 'col.names'
y_train <- tbl_df(read.table("./train/y_train.txt"))
x_train <- tbl_df(read.table("./train/X_train.txt"))
subj_train <- tbl_df(read.table("./train/subject_train.txt"))
##get features names
##features <- read.table("./features.txt")
##name all the features
colnames(x_train) <- features[,2]
##get only mean and standard deviation values
x_grep <- grep("mean|std", colnames(x_train))
x_train <- x_train[, x_grep]
##bind above read data into a single data set
data_train <- bind_cols(subj_train, y_train, x_train)
##rename the first 2 columns(subj_test, y_test)
colnames(data_train)[1:2] <- c("subject", "activity")
##combine test and train data sets
combined_data <- bind_rows(data_test, data_train)
##2: extract only the measurements on the mean and std
##for each measurement
##3: use descriptive activity names to name the activites in the data set
##names for activities 1:6 are:
##c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING")
combined_data[combined_data[,2] == 1,2] <- "WALKING"
combined_data[combined_data[,2] == 2,2] <- "WALKING_UPSTAIRS"
combined_data[combined_data[,2] == 3,2] <- "WALKING_DOWNSTAIRS"
combined_data[combined_data[,2] == 4,2] <- "SITTING"
combined_data[combined_data[,2] == 5,2] <- "STANDING"
combined_data[combined_data[,2] == 6,2] <- "LAYING"
##4: Appropriately labels the data set with descriptive variable names
##5: From step 4 creates a second, independent tidy data set with the
##average of each variable for each activity and each subject.
##use chaining %<-%
##gather table value creating new columns for all the variables and their co
##corresponding results
gathered_cd <- gather(combined_data, variables, result, tBodyAccmeanX:fBodyBodyGyroJerkMagmeanFreq)
##group table by subject, labels and variable
grouped_gc <- group_by(gac, subject, activity, variables)
##summarise to create a new data set
summarise(grouped_gc, average = mean(result))
##group table by subject, labels and variable
grouped_gc <- group_by(gathered_cd, subject, activity, variables)
##summarise to create a new data set
summarise(grouped_gc, average = mean(result))
getwd()
?create.file
touch("Codebook.md")
?create.file
touch "Codebook.md"
touch Codebook.md
n <- read.table("./activity_labels.txt")
n
n <- n[,2]
n
n[1]
?%>%
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
final_data_set
summarise(gg, average = mean(result))
descpt_names <- read.table("./activity_labels.txt")
descpt_names <- descpt_names[,2]
descpt_names[1]
View(combined_data)
combined_data[combined_data[,2] == 1,2] <- descpt_names[1]
combined_data[combined_data[,2] == 2,2] <- descpt_names[2]
combined_data[combined_data[,2] == 3,2] <- descpt_names[3]
combined_data[combined_data[,2] == 4,2] <- descpt_names[4]
combined_data[combined_data[,2] == 5,2] <- descpt_names[5]
combined_data[combined_data[,2] == 6,2] <- descpt_names[6]
View(combined_data)
as.character(descpt_names[1])
descpt_names <- read.table("./activity_labels.txt")
descpt_names <- descpt_names[,2]
combined_data[combined_data[,2] == 1,2] <- as.character(descpt_names[1])
combined_data[combined_data[,2] == 2,2] <- as.character(descpt_names[2])
combined_data[combined_data[,2] == 3,2] <- as.character(descpt_names[3])
combined_data[combined_data[,2] == 4,2] <- as.character(descpt_names[4])
combined_data[combined_data[,2] == 5,2] <- as.character(descpt_names[5])
combined_data[combined_data[,2] == 6,2] <- as.character(descpt_names[6])
View(combined_data)
summarise(gg, average = mean(result))
source("run_analysis.R")
final_data_set
View(final_data_set)
source("run_analysis.R")
View(combined_data)
View(combined_data)
source("run_analysis.R")
View(final_data_set)
